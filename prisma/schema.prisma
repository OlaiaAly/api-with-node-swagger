/// The `User` model represents a user in the system.
/// 
/// Fields:
/// - `id`: The unique identifier for the user, automatically generated and mapped to the MongoDB ObjectId.
/// - `email`: The unique email address of the user.
/// - `name`: The name of the user.
/// - `password`: The password of the user.
/// - `telephone`: The unique telephone number of the user.
/// - `Post`: A list of posts associated with the user.

/// The `Post` model represents a blog post in the system.
/// 
/// Fields:
/// - `id`: The unique identifier for the post, automatically generated and mapped to the MongoDB ObjectId.
/// - `title`: The title of the post.
/// - `content`: The content of the post.
/// - `published`: A boolean indicating whether the post is published, default is false.
/// - `author`: The user who authored the post, with a relation to the `User` model.
/// - `authorId`: The unique identifier of the author, mapped to the MongoDB ObjectId.
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  email     String @unique
  name      String
  password  String
  telephone String @unique
  Post Post[]
}



model Post {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  published Boolean @default(false)
  author    User   @relation(fields: [authorId], references: [id])
  authorId  String @db.ObjectId
}